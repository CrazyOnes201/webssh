<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.3.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

  <!-- 自动注入 -->
  <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>

  <!-- 自动扫描实体bean -->
  <context:component-scan base-package="com.liu.action, com.liu.service" />

  <!-- 数据源配置（与数据库连接的四要素的配置） -->
  <!-- 可以按住ctrl+ 点击bean的class里面看源码，可以找到property标签的name属性，并且有对应的get和set方法  -->
  <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
    <property name="driverClass" value="com.mysql.jdbc.Driver"></property>
    <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/tots?useUnicode=true&amp;characterEncoding=UTF-8&amp;useSSL=true"></property>
    <property name="user" value="root"></property>
    <property name="password" value="msm888zjc888"></property>
  </bean>


  <!-- session工厂配置 -->
  <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean" >
    <property name="dataSource" ref="dataSource"></property>
    <property name="annotatedClasses">
      <list>
        <value>com.liu.entity.User</value>
        <value>com.liu.entity.Traininfo</value>
      </list>
    </property>
    <!-- 配置hibernate的一些基本属性 -->
    <property name="hibernateProperties">
      <props>
        <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
        <prop key="hibernate.show_sql">true</prop>
      </props>
    </property>

    <!-- 加载hibernate的映射资源（根据不同业务模块分别写在不同的配置文件中，方便管理）-->
    <property name="mappingLocations">
      <list>
        <value>classpath:com/liu/entity/*.hbm.xml</value>
        <!-- 引入自己定义的hibernate的xml文件 -->
        <!--<value>com/liu/entity/Remainticket.hbm.xml</value>-->
        <!--<value>com/liu/entity/Train.hbm.xml</value>-->
        <!--<value>com/liu/entity/Trainmile.hbm.xml</value>-->
        <!--<value>com/liu/entity/Trainstation.hbm.xml</value>-->
        <!--<value>com/liu/entity/Traintime.hbm.xml</value>-->
        <!--<value>com/liu/entity/Usedticket.hbm.xml</value>-->
      </list>
    </property>
  </bean>

   <!--配置Hibernate事务管理器-->
  <bean id="txManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>


  <!--<tx:advice id="txAdvice" transaction-manager="txManager">-->
    <!--<tx:attributes>-->
      <!--<tx:method name="get*" read-only="false" propagation="NOT_SUPPORTED"/>-->
      <!--<tx:method name="find*" read-only="false" propagation="NOT_SUPPORTED"/>-->
      <!--<tx:method name="save*" propagation="REQUIRED"/>-->
      <!--<tx:method name="insert*" propagation="REQUIRED"/>-->
      <!--<tx:method name="update*" propagation="REQUIRED"/>-->
      <!--<tx:method name="delete*" propagation="REQUIRED"/>-->
      <!--<tx:method name="*" propagation="REQUIRED" />-->
    <!--</tx:attributes>-->
  <!--</tx:advice>-->

  <!--<aop:config>-->
  <!--<aop:pointcut id="transactionPointcut"-->
  <!--expression="execution(* com.liu.service.Impl.*(..))" />-->
  <!--<aop:advisor pointcut-ref="transactionPointcut"-->
  <!--advice-ref="txAdvice" />-->
  <!--</aop:config>-->


  <bean id="userDao" class="com.liu.dao.Impl.UserDAOImpl" scope="singleton">
    <property name="sessionFactory">
      <ref bean="sessionFactory"/>
    </property>
  </bean>

  <bean id="trainDao" class="com.liu.dao.Impl.TrainDAOImpl" scope="singleton">
    <property name="sessionFactory">
      <ref bean="sessionFactory" />
    </property>
  </bean>


</beans>